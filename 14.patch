--- configure.ac
+++ configure.ac
@@ -117,6 +117,7 @@ 
 
 ###########################################################################
 
+AC_PROG_F77
 AC_F77_WRAPPERS
 if test "x$with_lapack" != xno -o "x$with_blas" != xno; then
    ACX_BLAS
@@ -359,7 +360,7 @@ 
   AC_MSG_CHECKING([for alternate ctl.h location])
   for ctl_h_path in /usr/include/ctl /usr/local/include/ctl; do
      CPPFLAGS="$save_CPPFLAGS -I$ctl_h_path"
-     AC_COMPILE_IFELSE(AC_LANG_PROGRAM([[#include <ctl.h>]],[]), [CTL_H_CPPFLAG=-I$ctl_h_path; break])
+     AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <ctl.h>]],[])], [CTL_H_CPPFLAG=-I$ctl_h_path; break])
   done
   AC_MSG_RESULT([$CTL_H_CPPFLAG])
   CPPFLAGS=$save_CPPFLAGS])

--- configure.ac
+++ configure.ac
@@ -367,8 +367,10 @@ 
 if test "x$CTL_H_CPPFLAG" = "x"; then
   AC_MSG_ERROR([Couldn't find the ctl.h header file for libctl.])
 fi
-AC_SUBST(CTL_H_CPPFLAG)
 
+save_CPPFLAGS=$CPPFLAGS
+CPPFLAGS="$CPPFLAGS $CTL_H_CPPFLAG"
+AC_SUBST(CTL_H_CPPFLAG)
 # Check libctl version >= LIBCTL_MAJOR.LIBCTL_MINOR.LIBCTL_BUGFIX
 LIBCTL_MAJOR=3; LIBCTL_MINOR=2; LIBCTL_BUGFIX=0
 AC_MSG_CHECKING([whether libctl version is at least ${LIBCTL_MAJOR}.${LIBCTL_MINOR}.${LIBCTL_BUGFIX}])
@@ -378,6 +380,7 @@ AC_EGREP_CPP(yes, [[
   yes
 #endif
 ]], [AC_MSG_RESULT(ok)], [AC_MSG_ERROR([libctl version ${LIBCTL_MAJOR}.${LIBCTL_MINOR}.${LIBCTL_BUGFIX} or later is required])])
+CPPFLAGS=$save_CPPFLAGS
 
 # Check for libctl_quiet feature (in libctl 3.1.1 or later):
 AC_MSG_CHECKING([for libctl_quiet feature])

--- configure.ac
+++ configure.ac
@@ -367,10 +367,10 @@ 
 if test "x$CTL_H_CPPFLAG" = "x"; then
   AC_MSG_ERROR([Couldn't find the ctl.h header file for libctl.])
 fi
+AC_SUBST(CTL_H_CPPFLAG)
 
 save_CPPFLAGS=$CPPFLAGS
 CPPFLAGS="$CPPFLAGS $CTL_H_CPPFLAG"
-AC_SUBST(CTL_H_CPPFLAG)
 # Check libctl version >= LIBCTL_MAJOR.LIBCTL_MINOR.LIBCTL_BUGFIX
 LIBCTL_MAJOR=3; LIBCTL_MINOR=2; LIBCTL_BUGFIX=0
 AC_MSG_CHECKING([whether libctl version is at least ${LIBCTL_MAJOR}.${LIBCTL_MINOR}.${LIBCTL_BUGFIX}])
